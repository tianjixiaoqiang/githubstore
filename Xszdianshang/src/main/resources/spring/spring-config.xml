<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	                    http://www.springframework.org/schema/beans/spring-beans.xsd 
	                    http://www.springframework.org/schema/context      
	                    http://www.springframework.org/schema/context/spring-context.xsd 
	                    http://www.springframework.org/schema/mvc 
	                    http://www.springframework.org/schema/mvc/spring-mvc.xsd 
	                    http://www.springframework.org/schema/tx 
	                    http://www.springframework.org/schema/tx/spring-tx.xsd 
	                    http://www.springframework.org/schema/aop 
	                    http://www.springframework.org/schema/aop/spring-aop.xsd">
	<!-- 配置数据源(spring接管了mybatis的配置) -->  
	<!-- c3p0连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">  
	    <!-- jdbc:mysql://localhost:3306/testdb -->  
	    <!-- 本地数据库可以省略localhost:3306 -->
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/bookstore?useUnicode=true&amp;characterEncoding=UTF-8"></property>
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="user" value="root"></property>
		<property name="password" value="123"></property>
		<!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数，Default: 3 -->
		<property name="acquireIncrement" value="3"></property>
	    <!-- 初始化时获取连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="10"></property>
		<property name="minPoolSize" value="2"></property>
		<property name="maxPoolSize" value="10"></property>
	</bean>
	<!-- sqlSessionFactory配置 (回忆一下mybatis编程，现在由spring注入) -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
	    <!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" /> 
		<!-- 加载mybatis-config配置 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
	</bean>
	<!-- 配置mybatis mapper批量扫描 --> 
	<!-- 从basePackage指定的mapper包中扫描mapper类，自动生成bean -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
	    <!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="mapper" />
	</bean>
	<!-- 事务配置（spring接管mybatis事务操作，如事务的提交、回滚、关闭等） -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>  
	<!-- 使用annotation注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 自动扫描配置 --> 
	<!-- 在base-package包中扫描@Service、@Component注解的类， 并把这些类自动注册为bean 备注：@Controller放到spring 
		mvc扫描 -->
	<context:component-scan base-package="service" />
	<context:component-scan base-package="entity" />
</beans> 